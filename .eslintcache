[{"C:\\Users\\Marwa\\Downloads\\attendapp-master\\src\\index.js":"1","C:\\Users\\Marwa\\Downloads\\attendapp-master\\src\\App.js":"2","C:\\Users\\Marwa\\Downloads\\attendapp-master\\src\\navBar.js":"3","C:\\Users\\Marwa\\Downloads\\attendapp-master\\src\\profile.js":"4","C:\\Users\\Marwa\\Downloads\\attendapp-master\\src\\reportWebVitals.js":"5"},{"size":500,"mtime":1612903549000,"results":"6","hashOfConfig":"7"},{"size":5500,"mtime":1613251559315,"results":"8","hashOfConfig":"7"},{"size":340,"mtime":1612967282885,"results":"9","hashOfConfig":"7"},{"size":1553,"mtime":1613250194580,"results":"10","hashOfConfig":"7"},{"size":362,"mtime":1612903549000,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"12zxlj2",{"filePath":"14","messages":"15","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16","usedDeprecatedRules":"17"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"C:\\Users\\Marwa\\Downloads\\attendapp-master\\src\\index.js",[],"C:\\Users\\Marwa\\Downloads\\attendapp-master\\src\\App.js",["26","27","28","29","30","31","32","33","34","35"],"import NavBar from \"./navBar\";\nimport { Modal } from \"antd\";\n\nimport { Button, notification } from \"antd\";\nimport \"react-notifications/lib/notifications.css\";\nimport {\n  NotificationContainer,\n  NotificationManager,\n} from \"react-notifications\";\nimport React, { Component } from \"react\";\nimport \"antd/dist/antd.css\";\nimport { store } from \"react-notifications-component\";\nimport QrReader from \"react-qr-reader\";\nimport { Table, Tag, Space } from \"antd\";\nimport { ReactComponent as RQ } from \"./qr.svg\";\nimport Student from \"./profile\";\nimport \"./App.css\";\nconst key = \"updatable\";\nconst stu = [\"alert\", \"amna\"];\nconst columns = [\n  {\n    title: \"Name\",\n    dataIndex: \"name\",\n    key: \"name\",\n    render: (text) => <a>{text}</a>,\n  },\n  {\n    title: \"Attend\",\n    dataIndex: \"attend\",\n    key: \"attend\",\n  },\n  {\n    title: \"Grad\",\n    dataIndex: \"grad\",\n    key: \"address\",\n  },\n  {\n    title: \"Group\",\n    key: \"tags\",\n    dataIndex: \"group\",\n    render: (tags) => (\n      <>\n        {tags.map((tag) => {\n          let color = tag.length > 5 ? \"geekblue\" : \"green\";\n          if (tag === \"loser\") {\n            color = \"volcano\";\n          }\n          return (\n            <Tag color={color} key={tag}>\n              {tag.toUpperCase()}\n            </Tag>\n          );\n        })}\n      </>\n    ),\n  },\n  // {\n  //   title: \"Action\",\n  //   key: \"action\",\n  //   render: (text, record) => (\n  //     <Space size=\"middle\">\n  //       <a>Invite {record.name}</a>\n  //       <a>Delete</a>\n  //     </Space>\n  //   ),\n  // },\n];\nlet m = [\"mmmmmarwa\", \"jawad\"].filter(function (item, pos, self) {\n  console.log(pos, self, item, \"dom dom\");\n});\n\nconst dataApp = [\n  {\n    key: \"1\",\n    name: \"amna\",\n    attend: 0,\n    grad: \"forth\",\n    group: [\"A\"],\n  },\n  {\n    key: \"2\",\n    name: \"alert\",\n    attend: 0,\n    grad: \"forth\",\n    group: [\"A\"],\n  },\n];\nclass App extends Component {\n  state = {\n    visible: false,\n    showStudent: false,\n    confirmLoading: false,\n    modalText: false,\n    result: \"No One\",\n    sourceData: [],\n  };\n  do = (ar) => {\n    console.log(\"it workling\");\n    NotificationManager.info(\"Info message\");\n  };\n  createNotification = (type) => {\n    return () => {\n      NotificationManager.error(\"Error message\", \"Click me!\", 5000, () => {\n        alert(\"callback\");\n      });\n      //       break;\n      //   }\n    };\n  };\n\n  openNotification = () => {\n    return () => {\n      NotificationManager.error(\"Not found !\", \"Click me!\", 5000, () => {\n        alert(\"callback\");\n      });\n    };\n  };\n\n  showSuccess = () => {\n    NotificationManager.success(\"Done\", \"Click me!\", 5000, () => {\n      alert(\"callback\");\n    });\n  };\n  handleScan = (data) => {\n    if (data) {\n      dataApp.map((i) => {\n        if (i.name === data) {\n          console.log(\"its there\", dataApp);\n          i.attend = 1;\n          this.show();\n          this.setState({ sourceData: dataApp });\n        }\n      });\n    }\n\n    if (data) {\n      this.setState({\n        result: data,\n      });\n    }\n  };\n  handleError = (err) => {\n    console.error(err);\n  };\n\n  setConfirmLoading = () => {\n    this.setState({ confirmLoading: true });\n  };\n  setModalText = () => {};\n\n  showModal = () => {\n    this.setState({ visible: true });\n  };\n\n  handleOk = () => {\n    // this.setState({ confirmLoading: true });\n    // setTimeout(() => {\n    this.setState({ visible: true });\n    //   this.setState({ confirmLoading: true });\n    // }, 2000);\n  };\n\n  handleCancel = () => {\n    this.setState({ visible: false });\n    console.log(\"Clicked cancel button\");\n  };\n  test = (arg) => {\n    console.log(\n      arg.reduce((i, x) => i + x),\n      \"ttt\",\n      typeof arg\n    );\n  };\n\n  componentDidMount() {\n    this.setState({ sourceData: dataApp });\n  }\n\n  showStudentbtn = (data) => {\n    if (data) {\n      this.setState({ showStudent: true, visible: false });\n    }\n  };\n  render() {\n    return (\n      <div>\n        <NavBar search={this.handleOk} />\n        <NotificationContainer />\n        {this.state.showStudent ? (\n          <Student />\n        ) : (\n          <div className=\"app_leyout\">\n            <div className=\"Rq_warrper\">\n              <QrReader\n                onError={this.handleError}\n                onLoad={(e) => console.log(e, \"on load\")}\n                onScan={this.handleScan}\n                style={{ width: \"100%\", heihgt: \"100\", borderRadius: \"10px\" }}\n              />\n              <div id=\"toasts\"></div>\n              <RQ className=\"svgicon\" />\n            </div>\n            <div style={{ width: \"700px\" }}>\n              <Table columns={columns} dataSource={this.state.sourceData} />\n              <p>{this.state.result}</p>\n            </div>\n            <Modal\n              title={false}\n              visible={this.state.visible}\n              centered={true}\n              onOk={false}\n              // bodyStyle={{\n              //   backgroundColor: \"white\",\n              //   width: \"600px\",\n              //   heihgt: \"300px\",\n              //   padding: \"20px\",\n              // }}\n              footer={false}\n              confirmLoading={this.state.confirmLoading}\n              onCancel={this.handleCancel}>\n              {\" \"}\n              <QrReader\n                onError={this.handleError}\n                onLoad={(e) => console.log(e, \"on load\")}\n                onScan={this.showStudentbtn}\n                style={{ width: \"100%\", heihgt: \"100\" }}\n              />\n            </Modal>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n",["36","37"],"C:\\Users\\Marwa\\Downloads\\attendapp-master\\src\\navBar.js",["38","39","40"],"C:\\Users\\Marwa\\Downloads\\attendapp-master\\src\\profile.js",["41","42","43","44"],"import \"./Nav.css\";\r\nimport marwa from \"./marwa.jpg\";\r\nimport React, { useState } from \"react\";\r\nimport { Table, Tag, Space } from \"antd\";\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    dataIndex: \"name\",\r\n    key: \"name\",\r\n    render: (text) => <a>{text}</a>,\r\n  },\r\n  {\r\n    title: \"Attend\",\r\n    dataIndex: \"attend\",\r\n    key: \"attend\",\r\n  },\r\n  {\r\n    title: \"Grad\",\r\n    dataIndex: \"grad\",\r\n    key: \"address\",\r\n  },\r\n  {\r\n    title: \"Group\",\r\n    key: \"tags\",\r\n    dataIndex: \"group\",\r\n    render: (tags) => (\r\n      <>\r\n        {tags.map((tag) => {\r\n          let color = tag.length > 5 ? \"geekblue\" : \"green\";\r\n          if (tag === \"loser\") {\r\n            color = \"volcano\";\r\n          }\r\n          return (\r\n            <Tag color={color} key={tag}>\r\n              {tag.toUpperCase()}\r\n            </Tag>\r\n          );\r\n        })}\r\n      </>\r\n    ),\r\n  },\r\n  // {\r\n  //   title: \"Action\",\r\n  //   key: \"action\",\r\n  //   render: (text, record) => (\r\n  //     <Space size=\"middle\">\r\n  //       <a>Invite {record.name}</a>\r\n  //       <a>Delete</a>\r\n  //     </Space>\r\n  //   ),\r\n  // },\r\n];\r\n\r\nconst dataApp = [\r\n  {\r\n    key: \"1\",\r\n    name: \"amna\",\r\n    attend: 0,\r\n    grad: \"forth\",\r\n    group: [\"A\"],\r\n  },\r\n];\r\n\r\nfunction Student() {\r\n  const [data, setData] = useState(dataApp);\r\n  return (\r\n    <div className=\"profile-page\">\r\n      <div>\r\n        <img src={marwa} className=\"profileImage\" />\r\n      </div>\r\n      <Table columns={columns} dataSource={data} style={{ width: \"600px\" }} />\r\n    </div>\r\n  );\r\n}\r\nexport default Student;\r\n","C:\\Users\\Marwa\\Downloads\\attendapp-master\\src\\reportWebVitals.js",[],["45","46"],{"ruleId":"47","severity":1,"message":"48","line":4,"column":10,"nodeType":"49","messageId":"50","endLine":4,"endColumn":16},{"ruleId":"47","severity":1,"message":"51","line":4,"column":18,"nodeType":"49","messageId":"50","endLine":4,"endColumn":30},{"ruleId":"47","severity":1,"message":"52","line":12,"column":10,"nodeType":"49","messageId":"50","endLine":12,"endColumn":15},{"ruleId":"47","severity":1,"message":"53","line":14,"column":22,"nodeType":"49","messageId":"50","endLine":14,"endColumn":27},{"ruleId":"47","severity":1,"message":"54","line":18,"column":7,"nodeType":"49","messageId":"50","endLine":18,"endColumn":10},{"ruleId":"47","severity":1,"message":"55","line":19,"column":7,"nodeType":"49","messageId":"50","endLine":19,"endColumn":10},{"ruleId":"56","severity":1,"message":"57","line":25,"column":23,"nodeType":"58","endLine":25,"endColumn":26},{"ruleId":"47","severity":1,"message":"59","line":68,"column":5,"nodeType":"49","messageId":"50","endLine":68,"endColumn":6},{"ruleId":"60","severity":1,"message":"61","line":68,"column":39,"nodeType":"62","messageId":"63","endLine":68,"endColumn":48},{"ruleId":"60","severity":1,"message":"64","line":126,"column":23,"nodeType":"65","messageId":"63","endLine":126,"endColumn":25},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"56","severity":1,"message":"70","line":7,"column":9,"nodeType":"58","endLine":7,"endColumn":21},{"ruleId":"56","severity":1,"message":"70","line":8,"column":9,"nodeType":"58","endLine":8,"endColumn":44},{"ruleId":"56","severity":1,"message":"70","line":11,"column":9,"nodeType":"58","endLine":11,"endColumn":21},{"ruleId":"47","severity":1,"message":"53","line":4,"column":22,"nodeType":"49","messageId":"50","endLine":4,"endColumn":27},{"ruleId":"56","severity":1,"message":"57","line":10,"column":23,"nodeType":"58","endLine":10,"endColumn":26},{"ruleId":"47","severity":1,"message":"71","line":65,"column":16,"nodeType":"49","messageId":"50","endLine":65,"endColumn":23},{"ruleId":"72","severity":1,"message":"73","line":69,"column":9,"nodeType":"58","endLine":69,"endColumn":53},{"ruleId":"66","replacedBy":"74"},{"ruleId":"68","replacedBy":"75"},"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'notification' is defined but never used.","'store' is defined but never used.","'Space' is defined but never used.","'key' is assigned a value but never used.","'stu' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'m' is assigned a value but never used.","array-callback-return","Array.prototype.filter() expects a return value from function.","FunctionExpression","expectedInside","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","no-native-reassign",["76"],"no-negated-in-lhs",["77"],"The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'setData' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",["76"],["77"],"no-global-assign","no-unsafe-negation"]